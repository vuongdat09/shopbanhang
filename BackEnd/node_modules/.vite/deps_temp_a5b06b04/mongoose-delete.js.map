{
  "version": 3,
  "sources": ["../../mongoose-delete/index.js"],
  "sourcesContent": ["var mongoose = require('mongoose'),\n    Schema = mongoose.Schema,\n    Model = mongoose.Model,\n    util = require('util');\n\n/**\n * This code is taken from official mongoose repository\n * https://github.com/Automattic/mongoose/blob/master/lib/query.js#L3847-L3873\n */\nfunction parseUpdateArguments (conditions, doc, options, callback) {\n    if ('function' === typeof options) {\n        // .update(conditions, doc, callback)\n        callback = options;\n        options = null;\n    } else if ('function' === typeof doc) {\n        // .update(doc, callback);\n        callback = doc;\n        doc = conditions;\n        conditions = {};\n        options = null;\n    } else if ('function' === typeof conditions) {\n        // .update(callback)\n        callback = conditions;\n        conditions = undefined;\n        doc = undefined;\n        options = undefined;\n    } else if (typeof conditions === 'object' && !doc && !options && !callback) {\n        // .update(doc)\n        doc = conditions;\n        conditions = undefined;\n        options = undefined;\n        callback = undefined;\n    }\n\n    var args = [];\n\n    if (conditions) args.push(conditions);\n    if (doc) args.push(doc);\n    if (options) args.push(options);\n    if (callback) args.push(callback);\n\n    return args;\n}\n\nfunction parseIndexFields (options) {\n    var indexFields = {\n        deleted: false,\n        deletedAt: false,\n        deletedBy: false\n    };\n\n    if (!options.indexFields) {\n        return indexFields;\n    }\n\n    if ((typeof options.indexFields === 'string' || options.indexFields instanceof String) && options.indexFields === 'all') {\n        indexFields.deleted = indexFields.deletedAt = indexFields.deletedBy = true;\n    }\n\n    if (typeof(options.indexFields) === \"boolean\" && options.indexFields === true) {\n        indexFields.deleted = indexFields.deletedAt = indexFields.deletedBy = true;\n    }\n\n    if (Array.isArray(options.indexFields)) {\n        indexFields.deleted = options.indexFields.indexOf('deleted') > -1;\n        indexFields.deletedAt = options.indexFields.indexOf('deletedAt') > -1;\n        indexFields.deletedBy = options.indexFields.indexOf('deletedBy') > -1;\n    }\n\n    return indexFields;\n}\n\nfunction createSchemaObject (typeKey, typeValue, options) {\n    options[typeKey] = typeValue;\n    return options;\n}\n\nmodule.exports = function (schema, options) {\n    options = options || {};\n    var indexFields = parseIndexFields(options);\n\n    var typeKey = schema.options.typeKey;\n    var mongooseMajorVersion = +mongoose.version[0]; // 4, 5...\n    var mainUpdateMethod = mongooseMajorVersion < 5 ? 'update' : 'updateMany';\n    var mainUpdateWithDeletedMethod = mainUpdateMethod + 'WithDeleted';\n\n    function updateDocumentsByQuery(schema, conditions, updateQuery, callback) {\n        if (schema[mainUpdateWithDeletedMethod]) {\n            return schema[mainUpdateWithDeletedMethod](conditions, updateQuery, { multi: true }, callback);\n        } else {\n            return schema[mainUpdateMethod](conditions, updateQuery, { multi: true }, callback);\n        }\n    }\n\n    schema.add({ deleted: createSchemaObject(typeKey, Boolean, { default: false, index: indexFields.deleted }) });\n\n    if (options.deletedAt === true) {\n        schema.add({ deletedAt: createSchemaObject(typeKey, Date, { index: indexFields.deletedAt }) });\n    }\n\n    if (options.deletedBy === true) {\n        schema.add({ deletedBy: createSchemaObject(typeKey, options.deletedByType || Schema.Types.ObjectId, { index: indexFields.deletedBy }) });\n    }\n\n    var use$neOperator = true;\n    if (options.use$neOperator !== undefined && typeof options.use$neOperator === \"boolean\") {\n        use$neOperator = options.use$neOperator;\n    }\n\n    schema.pre('save', function (next) {\n        if (!this.deleted) {\n            this.deleted = false;\n        }\n        next();\n    });\n\n    if (options.overrideMethods) {\n        var overrideItems = options.overrideMethods;\n        var overridableMethods = ['count', 'countDocuments', 'find', 'findOne', 'findOneAndUpdate', 'update', 'updateOne', 'updateMany', 'aggregate'];\n        var finalList = [];\n\n        if ((typeof overrideItems === 'string' || overrideItems instanceof String) && overrideItems === 'all') {\n            finalList = overridableMethods;\n        }\n\n        if (typeof(overrideItems) === \"boolean\" && overrideItems === true) {\n            finalList = overridableMethods;\n        }\n\n        if (Array.isArray(overrideItems)) {\n            overrideItems.forEach(function(method) {\n                if (overridableMethods.indexOf(method) > -1) {\n                    finalList.push(method);\n                }\n            });\n        }\n\n        if (finalList.indexOf('aggregate') > -1) {\n            schema.pre('aggregate', function() {\n                var firstMatch = this.pipeline()[0];\n\n                if(firstMatch.$match?.deleted?.$ne !== false){\n                    if(firstMatch.$match?.showAllDocuments === 'true'){\n                        var {showAllDocuments, ...replacement} = firstMatch.$match;\n                        this.pipeline().shift();\n                        if(Object.keys(replacement).length > 0){\n                            this.pipeline().unshift({ $match: replacement });\n                        }\n                    }else{\n                        this.pipeline().unshift({ $match: { deleted: { '$ne': true } } });\n                    }\n                }\n            });\n        }\n\n        finalList.forEach(function(method) {\n            if (['count', 'countDocuments', 'find', 'findOne'].indexOf(method) > -1) {\n                var modelMethodName = method;\n\n                // countDocuments do not exist in Mongoose v4\n                /* istanbul ignore next */\n                if (mongooseMajorVersion < 5 && method === 'countDocuments' && typeof Model.countDocuments !== 'function') {\n                    modelMethodName = 'count';\n                }\n\n                schema.statics[method] = function () {\n                    var query = Model[modelMethodName].apply(this, arguments);\n                    if (!arguments[2] || arguments[2].withDeleted !== true) {\n                        if (use$neOperator) {\n                            query.where('deleted').ne(true);\n                        } else {\n                            query.where({deleted: false});\n                        }\n                    }\n                    return query;\n                };\n                schema.statics[method + 'Deleted'] = function () {\n                    if (use$neOperator) {\n                        return Model[modelMethodName].apply(this, arguments).where('deleted').ne(false);\n                    } else {\n                        return Model[modelMethodName].apply(this, arguments).where({deleted: true});\n                    }\n                };\n                schema.statics[method + 'WithDeleted'] = function () {\n                    return Model[modelMethodName].apply(this, arguments);\n                };\n            } else {\n                if (method === 'aggregate') {\n                    schema.statics[method + 'Deleted'] = function () {\n                        var args = [];\n                        Array.prototype.push.apply(args, arguments);\n                        var match = { $match : { deleted : {'$ne': false } } };\n                        arguments.length ? args[0].unshift(match) : args.push([match]);\n                        return Model[method].apply(this, args);\n                    };\n\n                    schema.statics[method + 'WithDeleted'] = function () {\n                        var args = [];\n                        Array.prototype.push.apply(args, arguments);\n                        var match = { $match : { showAllDocuments : 'true' } };\n                        arguments.length ? args[0].unshift(match) : args.push([match]);\n                        return Model[method].apply(this, args);\n                    };\n                } else {\n                    schema.statics[method] = function () {\n                        var args = parseUpdateArguments.apply(undefined, arguments);\n\n                        if (use$neOperator) {\n                            args[0].deleted = {'$ne': true};\n                        } else {\n                            args[0].deleted = false;\n                        }\n\n                        return Model[method].apply(this, args);\n                    };\n\n                    schema.statics[method + 'Deleted'] = function () {\n                        var args = parseUpdateArguments.apply(undefined, arguments);\n\n                        if (use$neOperator) {\n                            args[0].deleted = {'$ne': false};\n                        } else {\n                            args[0].deleted = true;\n                        }\n\n                        return Model[method].apply(this, args);\n                    };\n\n                    schema.statics[method + 'WithDeleted'] = function () {\n                        return Model[method].apply(this, arguments);\n                    };\n                }\n            }\n        });\n    }\n\n    schema.methods.delete = function (deletedBy, cb) {\n        if (typeof deletedBy === 'function') {\n          cb = deletedBy;\n          deletedBy = null;\n        }\n\n        this.deleted = true;\n\n        if (schema.path('deletedAt')) {\n            this.deletedAt = new Date();\n        }\n\n        if (schema.path('deletedBy')) {\n            this.deletedBy = deletedBy;\n        }\n\n        if (options.validateBeforeDelete === false) {\n            return this.save({ validateBeforeSave: false }, cb);\n        }\n\n        return this.save(cb);\n    };\n\n    schema.statics.delete =  function (conditions, deletedBy, callback) {\n        if (typeof deletedBy === 'function') {\n            callback = deletedBy;\n            conditions = conditions;\n            deletedBy = null;\n        } else if (typeof conditions === 'function') {\n            callback = conditions;\n            conditions = {};\n            deletedBy = null;\n        }\n\n        var doc = {\n            deleted: true\n        };\n\n        if (schema.path('deletedAt')) {\n            doc.deletedAt = new Date();\n        }\n\n        if (schema.path('deletedBy')) {\n            doc.deletedBy = deletedBy;\n        }\n\n        return updateDocumentsByQuery(this, conditions, doc, callback);\n    };\n\n    schema.statics.deleteById =  function (id, deletedBy, callback) {\n        if (arguments.length === 0 || typeof id === 'function') {\n            var msg = 'First argument is mandatory and must not be a function.';\n            throw new TypeError(msg);\n        }\n\n        var conditions = {\n            _id: id\n        };\n\n        return this.delete(conditions, deletedBy, callback);\n    };\n\n    schema.methods.restore = function (callback) {\n        this.deleted = false;\n        this.deletedAt = undefined;\n        this.deletedBy = undefined;\n\n        if (options.validateBeforeRestore === false) {\n            return this.save({ validateBeforeSave: false }, callback);\n        }\n\n        return this.save(callback);\n    };\n\n    schema.statics.restore =  function (conditions, callback) {\n        if (typeof conditions === 'function') {\n            callback = conditions;\n            conditions = {};\n        }\n\n        var doc = {\n            $unset:{\n                deleted: true,\n                deletedAt: true,\n                deletedBy: true\n            }\n        };\n\n        return updateDocumentsByQuery(this, conditions, doc, callback);\n    };\n};\n"],
  "mappings": "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",
  "names": ["schema"]
}
